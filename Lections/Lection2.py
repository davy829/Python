# КОЛЕКЦИИ
# тип         изменяемость    индексность    уникальность       как создаем
# коллекции
#
# список
# list           +               +               -                []  list()
#
# кортеж
# tuple          -               +               -                () turpl()
#
# строка
# string         +                +              -
#
# множество
# set            +               -               +                {el1,el2} set()
#
# замороженое
# множество
# frozenset       -              -                +               frozenset()
#
# словарь
# dict       элементы +           -               элем +             {}  {key:value,} dict()
#            ключи -                              ключ +
#            значения +                           знач -

#-------------------------------------------------------------------------------------------
# 1-списки индексные упорядоченые значения
# list_1 = []
# list_1 = list()
# заполним список до 100 если ита четная   генератор списков !!!
# list_1 = [i for i in range(1,101)]
# list_2 = [(i, i) for i in range(1,101)]
# list_3 = [(f'exp{i}',i) for i in range(1,101) if i % 2 == 0]
# list_4 = [(f'sqear_i_{i*2}',i) for i in range(1,101) if i % 2 == 0] # квадрат числа
#-------------------------------------------------------------------------------------------
# print(list_1)
# list_1 = [1, 2, 5, 8, 9,5]  # создание списка варианты
# print(*list_1)  # вывод чере * только значения без скобок
# for i in list_1:
#     print(i, end=' ')  # выводим по элементно
# #print('\n', list_1[-1])  # последний элемен
# #print('\n', len(list_1))  # длина списка
# #print(type(list_1))  # класс тип списка
# list_1.append('88')  # добавляет в конец 88
# list_1.insert(1,'99') #добавит в позицию 3  значение 99
# print('\n',*list_1)
# list_1.pop()  # удалит последний элемент приймет его значение
# print('\n',*list_1)
# print(list_1[::6]) # пройдет по элементам с шаго шесть
# -------------------------------------------------------------------------------------------------
# 2-кортежи не изменяемые

# kortej = ()  # создали пустой кортеж
# print(type(kortej))
# kortej = (1, 5, 8,)  # добавили значения в коце запятая
# print(kortej)
#
# lst = [12, 15, 14]  # заполнили список данными
# print(lst)
# lst = tuple(lst)  # преобразовали список в кортеж
# print(lst)
# print(lst[2])
# a, b = 1, 2  # так тоже можно
# z = x = 1  # так можно присваивитт
#
# u, o, p = lst
# print(u, o, p)
#
# for i in lst:
#     print(i)
# -------------------------------------------------------------------------------------------------
# #3-словари с ключами !!!!
# dic = {}     # empty dictionary
# dic_1 = dict() # empty dictionary
# dictionary = {'one':'один','two':'два','three':'три','four':'четыре','five':'пять','six':'шесть'}
# dictionary['seven'] = 'семь8'  # add in dictionary
# del dictionary['two']          # delete key 'two'
# # for item in dictionary:
# #     print('{}:{}'.format(item,dictionary[item])) #output fomat
# #     print(item)                              # output only keys
#
# for (k,v) in dictionary.items():  # такой вывод еще
#     print(v)
# -------------------------------------------------------------------------------------------------
# 4-множества для логики -- пересечения ,разности , обеденнения
# mnojestvo = set()
# colors = {'red', 'green', 'blue'}  # создаст множество уникальных
# colors.add('gray')  # добавит грэй
# colors.add('red')  # не добавит ред (уникальность
# colors.remove('green')  # удалит грин, если нет ошибка
# colors.discard('blue')  # удалит если он есть без ошибки
# colors.clear()  #
# a = {0, 2, 4, 6, 88}
# b = {1, 3, 5, 7, 99}
# c = a.copy() # копир
# u = a.union(b) #  обеденнения
# i = a.intersection(b) # пересечение a b
# y = a.difference(b) # разность  a b
# y6 = b.difference(a)
# r5 = a.union(b).difference(a.intersection(b))
# е5 = frozenset(a) #заморозим множество а в е5
# -------------------------------------------------------------------------------------------------
