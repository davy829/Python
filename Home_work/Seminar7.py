# Задача 34: Винни-Пух попросил Вас посмотреть, есть ли в его стихах ритм. Поскольку
# разобраться в его кричалках не настолько просто, насколько легко он их придумывает, Вам
# стоит написать программу. Винни-Пух считает, что ритм есть, если число слогов (т.е. число
# гласных букв) в каждой фразе стихотворения одинаковое. Фраза может состоять из одного
# слова, если во фразе несколько слов, то они разделяются дефисами. Фразы отделяются друг
# от друга пробелами. Стихотворение Винни-Пух вбивает в программу с клавиатуры. В ответе
# напишите “Парам пам-пам”, если с ритмом все в порядке и “Пам парам”, если с ритмом все не
# в порядке
# Ввод: Вывод:
# пара-ра-рам рам-пам-папам па-ра-па-дам Парам пам-пам
# ------------------------------R1---------------------------------------
# mystr = 'пара-ра-рам рам-пам-папам па-ра-па-дам Парам пам-пам'
# list_1 = mystr.split(' ')
# for i in range(len(list_1)-1):
#     if list_1[i].count('а') != list_1[i + 1].count('а'):
#         print(f"Ритма нет! ({list_1[i].count('а')} != {list_1[i+1].count('а')})")
# -------------------------------------------------------------------------


# Задача 36: Напишите функцию print_operation_table(operation, num_rows=6, num_columns=6),
# которая принимает в качестве аргумента функцию, вычисляющую элемент по номеру строки и
# столбца. Аргументы num_rows и num_columns указывают число строк и столбцов таблицы,
# которые должны быть распечатаны. Нумерация строк и столбцов идет с единицы (подумайте,
# почему не с нуля). Примечание: бинарной операцией называется любая операция, у которой
# ровно два аргумента, как, например, у операции умножения.
# Ввод: Вывод:
#  2 4 6 8 10 12
#  3 6 9 12 15 18
#  4 8 12 16 20 24
#  5 10 15 20 25 30
#  6 12 18 24 30 36

# --------------------R1----------------------------
# def print_operation_table( ot, do):
#     for i in range(ot, do):
#         for j in range(ot, do):
#             print(i * j, end=' ')
#             if j == do-1: print('\t')
# print_operation_table(2,7)
#-------------------------R2----------------------------------
# def print_operation_table(op, x, y):
#     if y == do: print('\t')
#     print(op(x, y),end=' ')
#
# ot = 1
# do = 8
# for i in range(ot, do):
#     for j in range(ot-1, do+1):
#         print_operation_table(lambda x, y: x + y, i, j)
#-------------------------R2----------------------------------
def print_operation_table(op, x=6, y=6):
    for i in range(1, y+1):
        if x == i: print('\t')
        for j in range(1, y + 1):

            print(op(i, j), end=' ')


print_operation_table(lambda x, y: x * y, 2, 7)