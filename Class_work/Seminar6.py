# Задача №39.
# Даны два массива чисел. Требуется вывести те элементы
# первого массива (в том порядке, в каком они идут в первом
# массиве), которых нет во втором массиве. Пользователь вводит
# число N - количество элементов в первом массиве, затем N
# чисел - элементы массива. Затем число M - количество
# элементов во втором массиве. Затем элементы второго массива
# ----------------------R1--------------------------
# l_1 = [3, 1, 3, 4, 2, 4, 12]
# l_2 = [4, 15, 43, 1, 15, 1,12]
# l_3 = []
# for it in l_1:
#     if it not in l_2:
#         l_3.append(it)
# print(l_3)
# ---------------------R2-------------------------------
# result_arr = []
# for i in arr_1:
#     if i not in arr_2:
#         if i not in result_arr:
#             result_arr.append(i)
#----------------------------------------------
# Задача №41.
# Дан массив, состоящий из целых чисел. Напишите
# программу, которая в данном массиве определит
# количество элементов, у которых два соседних и, при
# этом, оба соседних элемента меньше данного. Сначала
# вводится число N — количество элементов в массиве
# Далее записаны N чисел — элементы массива. Массив
# состоит из целых чисел.
#------------------------------------------------------
# l_1 = [1, 10, 3, 4, 12, 6, 7, 6]
# count_1 = 0
# for i in range(1, len(l_1)-1):
#     if l_1[i - 1] < l_1[i] > l_1[i + 1]:
#         count_1 = count_1 + 1
# print(f'>>> {count_1} число имеет большее значение соседних')
# --------------------------------------------------
# Задача №43.
# Дан список чисел. Посчитайте, сколько в нем пар
# элементов, равных друг другу. Считается, что любые
# два элемента, равные друг другу образуют одну пару,
# которую необходимо посчитать. Вводится список
# чисел. Все числа списка находятся на разных
# строках.
# -------------------R1---------------------------
# l_1 = [2,2,2,2,2,2,3,3]
# mcnt=0
# for itm in set(l_1):
#     mcnt += l_1.count(itm) // 2
# print(mcnt)
# --------------------R2-------------------------------
# arr = [1, 2, 3, 2, 3]
# count = 0
# arr2 = []
# for i in range(len(arr)):
#     if arr[i] in arr2:
#         count += 1
#         arr2.remove(arr[i])
#     else:
#         arr2.append(arr[i])
# print(count)
#---------------------------------------------------
# Задача №45. Решение в группах
# Два различных натуральных числа n и m называются
# дружественными, если сумма делителей числа n
# (включая 1, но исключая само n) равна числу m и
# наоборот. Например, 220 и 284 – дружественные числа.
# По данному числу k выведите все пары дружественных
# чисел, каждое из которых не превосходит k. Программа
# получает на вход одно натуральное число k, не
# превосходящее 105
# . Программа должна вывести все
# пары дружественных чисел, каждое из которых не
# превосходит k. Пары необходимо выводить по одной в
# строке, разделяя пробелами. Каждая пара должна быть
# выведена только один раз (перестановка чисел новую
# пару не дает).
# ---------------------------------------------------
# def sum_of_dividers(num):
#     sum = 1
#     for i in range(2, num // 2 + 1):
#         if num % i == 0:
#             sum += i
#     return sum
#------------------------------------------------------
# k = int(input('Input the end of the range: '))
#
# for i in range(2, k):
#     partner = sum_of_dividers(i)
#     if i == sum_of_dividers(partner) and i < partner:
#         print(f'{i} - {partner}')
